betfair {

    header-keys {
        application-key = "X-Application"
        session-token = "X-Authentication"
    }

    auth {

        cert {
            file = "[BETFAIR_CERT_FILE MISSING]"
            file = ${?BETFAIR_CERT_FILE}
            password = "[BETFAIR_CERT_PASSWORD MISSING]"
            password = ${?BETFAIR_CERT_PASSWORD}
        }

        credentials {
            application-key = "[APPLICATION_KEY MISSING]"
            application-key = ${?BETFAIR_APPLICATION_KEY}
            username = "[USERNAME MISSING]"
            username = ${?BETFAIR_USERNAME}
            password = "[PASSWORD MISSING]"
            password = ${?BETFAIR_PASSWORD}
        }

        uri = "https://identitysso-cert.betfair.com/api/certlogin"

        # Configures the way the session token retrieved from Betfair at login (used to authenticate requests to the Betfair API) is stored so it can be reused across multiple sessions
        # Possible values of betfair.auth.session-store.provider-type are "none" or "file".
        # When set to "none" the session token isn't stored at all and every time the application starts it will retrieve a new session token by 'logging in'
        # When set to "file" the session token is stored in a file along with its expiration time, every time the application starts the token is retrieved from the file
        # A new token is only retrieved when the current token has expired.
        # The "file" setting is useful in development, it reduces the number of authentication calls being made.
        # The "in-mem" setting should be used in production for single-instance applications
        # Clustered applications will need to share the session token across multiple processes, so a networked file location should be used.
        session-store {
            provider-type = "in-mem"

            # Configure the path where the token and its expiry date are stored
            file-provider.file-path = "."
        }
    }

    exchange {

        required-headers = [
            {
                key = "Accept"
                value = "application/json"
            },
            {
                key = "Accept-Charset"
                value = "UTF-8"
            },
            {
                key = "Accept-Encoding"
                value = "gzip, deflate"
            }
        ]

        socket {
            enabled = yes
            frame-size = 102400
            uri = "stream-api-integration.betfair.com"
            port = 443
            outgoing-heartbeat = off
        }

        uris {
            exchange-uri-base = "https://api.betfair.com/exchange/betting/rest/v1.0"
            cancel-orders = ${betfair.exchange.uris.exchange-uri-base}"/cancelOrders/"
            list-cleared-orders = ${betfair.exchange.uris.exchange-uri-base}"/listClearedOrders/"
            list-competitions = ${betfair.exchange.uris.exchange-uri-base}"/listCompetitions/"
            list-countries = ${betfair.exchange.uris.exchange-uri-base}"/listCountries/"
            list-current-orders = ${betfair.exchange.uris.exchange-uri-base}"/listCurrentOrders/"
            list-event-types = ${betfair.exchange.uris.exchange-uri-base}"/listEventTypes/"
            list-events = ${betfair.exchange.uris.exchange-uri-base}"/listEvents/"
            list-market-catalogue = ${betfair.exchange.uris.exchange-uri-base}"/listMarketCatalogue/"
            list-market-book = ${betfair.exchange.uris.exchange-uri-base}"/listMarketBook/"
            place-orders = ${betfair.exchange.uris.exchange-uri-base}"/placeOrders/"
        }

        logging {
            log-requests = on
            log-responses = on
        }
    }

    navigation {
        lang = "en"
        uri  = "https://api.betfair.com/exchange/betting/rest/v1/"${betfair.navigation.lang}"/navigation/menu.json"
    }
}
